input{
    file{
        path => "D:/elasticstack/doc/access_log"
        start_position => "beginning"
    }
}

filter{

    grok {
        match => [ "message", "%{IP:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:apache_timestamp}\] \"%{WORD:method} /%{NOTSPACE:request_page} HTTP/%{NUMBER:http_version}\" %{NUMBER:server_response} %{INT:num_bytes:int} %{DATA:[url]} %{GREEDYDATA:message} %{QS:agent}" ]

    #match => [ "message", "%{IP:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:apache_timestamp}\] \"%{WORD:method} /%{NOTSPACE:request_page} HTTP/%{NUMBER:http_version}\" %{NUMBER:server_response} %{INT:num_bytes:int} %{DATA:[user_agent]}" ]
    }

    # useragent{
    #     source => "agent"
    #     target => "os"
    # }

    ip2location {
        source => "clientip"
    }

    
    mutate {
        gsub => [
            "agent",'"',"",
            "url",'"',""
        ]
        

        convert =>{
            "server_response" => "integer"
        }

        add_field =>{
            "host_name" =>"%{[host][name]}"
            "os_name" =>"%{agent}"
            "qa"=>"%{QS}"
        }


        remove_field => [  "path", "@version", "log","host" ] 

        
    }
    


  ruby {
    code => '
        l = event.get("ip2location")
        if l
            l.each { |k, v|
                if v == "Not_Supported"
                    event.remove("[ip2location][#{k}]")
                end
            }
        end
    '
    }

    
}

output{
    stdout {
        codec => rubydebug
    }
}